---
layout: default.liquid
title: Date And Time
---

<h1>Date And Time</h1>
<h2>Classes</h2>
<h3>Datetime</h3>
<h4>Functions</h4>
<h5>set</h5>
<p>Set the date and time of the datetime object.</p>
<p>bool datetime::set(uint year, uint month, uint day, uint hour, uint minute, uint second);</p>
<h6>Arguments:</h6>
<ul>
<li><p>uint year: the year to set.</p>
</li>
<li><p>uint month: the month to set.</p>
</li>
<li><p>uint day: the day to set.</p>
</li>
<li><p>uint hour: the hour to set.</p>
</li>
<li><p>uint minute: the minute to set.</p>
</li>
<li><p>uint second: the second to set.</p>
</li>
</ul>
<h6>Returns:</h6>
<p>bool: true if the values were successfully set, false otherwise.</p>
<h6>Example:</h6>
<pre><code>void main() {
	datetime d;
	d.set(2024, 3, 9, 1, 24, 49);
	alert(&quot;The datetime object is currently set to&quot;, d.year + &quot;/&quot; + d.month + &quot;/&quot; + d.day + &quot;, &quot; + d.hour + &quot;:&quot; + d.minute + &quot;:&quot; + d.second);
}
</code></pre>
<h5>set_date</h5>
<p>Set the current date of the datetime object.</p>
<p>bool datetime::set_date(uint year, uint month, uint day);</p>
<h6>Arguments:</h6>
<ul>
<li><p>uint year: the year to set.</p>
</li>
<li><p>uint month: the month to set.</p>
</li>
<li><p>uint day: the day to set.</p>
</li>
</ul>
<h6>Returns:</h6>
<p>bool: true if the date was successfully set, false otherwise.</p>
<h6>Example:</h6>
<pre><code>void main() {
	datetime d;
	d.set_date(2024, 9, 2);
	alert(&quot;The current date of the datetime object is&quot;, d.year + &quot;/&quot; + d.month + &quot;/&quot; + d.day);
}
</code></pre>
<h5>set_time</h5>
<p>Set the current time of the datetime object.</p>
<p>bool datetime::set_time(uint hour, uint minute, uint second);</p>
<h6>Arguments:</h6>
<ul>
<li><p>uint hour: the hour to set.</p>
</li>
<li><p>uint minute: the minute to set.</p>
</li>
<li><p>uint second: the second to set.</p>
</li>
</ul>
<h6>Returns:</h6>
<p>bool: true if the time was successfully set, false otherwise.</p>
<h6>Example:</h6>
<pre><code>void main() {
	datetime d;
	d.set_time(13, 53, 39);
	alert(&quot;The current time of the datetime object is&quot;, d.hour + &quot;:&quot; + d.minute + &quot;:&quot; + d.second);
}
</code></pre>
<h4>Properties</h4>
<h5>day</h5>
<p>Represents the current day of the datetime object.</p>
<p>uint datetime::day;</p>
<h6>Example:</h6>
<pre><code>void main() {
	datetime d;
	d.set_date(2024, 5, 8);
	alert(&quot;The datetime's current day is&quot;, d.day);
}
</code></pre>
<h5>hour</h5>
<p>Represents the current hour of the datetime object.</p>
<p>uint datetime::hour;</p>
<h6>Example:</h6>
<pre><code>void main() {
	datetime d;
	d.set_time(12, 47, 19);
	alert(&quot;The current hour of the datetime object is&quot;, d.hour);
}
</code></pre>
<h5>minute</h5>
<p>Represents the current minute of the datetime object.</p>
<p>uint datetime::minute;</p>
<h6>Example:</h6>
<pre><code>void main() {
	datetime d;
	d.set_time(12, 47, 19);
	alert(&quot;The current minute of the datetime object is&quot;, d.minute);
}
</code></pre>
<h5>month</h5>
<p>Represents the current month of the datetime object.</p>
<p>uint datetime::month;</p>
<h6>Example:</h6>
<pre><code>void main() {
	datetime d;
	d.set_date(2024, 5, 8);
	alert(&quot;The datetime's current month is&quot;, d.month);
}
</code></pre>
<h5>second</h5>
<p>Represents the current second of the datetime object.</p>
<p>uint datetime::second;</p>
<h6>Example:</h6>
<pre><code>void main() {
	datetime d;
	d.set_time(12, 47, 19);
	alert(&quot;The current second of the datetime object is&quot;, d.second);
}
</code></pre>
<h5>year</h5>
<p>Represents the current year of the datetime object.</p>
<p>uint datetime::year;</p>
<h6>Example:</h6>
<pre><code>void main() {
	datetime d;
	d.set_date(2024, 5, 8);
	alert(&quot;The datetime's current year is&quot;, d.year);
}
</code></pre>
<h2>Global Properties</h2>
<h3>DATE_DAY</h3>
<p>Returns the number of the current day through the month.</p>
<p>const int DATE_DAY;</p>
<h4>Example:</h4>
<pre><code>void main() {
	alert(&quot;example&quot;, &quot;It is day &quot; + DATE_DAY + &quot; of &quot; + DATE_MONTH_NAME);
}
</code></pre>
<h3>DATE_MONTH</h3>
<p>Returns the month set on the system, from 1 to 12.</p>
<p>const int DATE_MONTH;</p>
<h4>Example:</h4>
<pre><code>void main() {
	alert(&quot;example&quot;, &quot;the month is &quot; + DATE_MONTH);
}
</code></pre>
<h3>DATE_MONTH_NAME</h3>
<p>Returns the name of the current month.</p>
<p>const string DATE_MONTH_NAME;</p>
<h4>Example:</h4>
<pre><code>void main() {
	alert(&quot;example&quot;, &quot;the month is &quot; + DATE_MONTH_NAME);
}
</code></pre>
<h3>DATE_WEEKDAY</h3>
<p>Returns the number of the current day through the week.</p>
<p>const int DATE_WEEKDAY;</p>
<h4>Example:</h4>
<pre><code>void main() {
	alert(&quot;example&quot;, &quot;It is day &quot; + DATE_WEEKDAY + &quot; of the week&quot;);
}
</code></pre>
<h3>DATE_WEEKDAY_NAME</h3>
<p>Returns the name of the current day.</p>
<p>const string DATE_WEEKDAY_NAME;</p>
<h4>Example:</h4>
<pre><code>void main() {
	alert(&quot;example&quot;, &quot;It is &quot; + DATE_WEEKDAY_NAME + &quot; today&quot;);
}
</code></pre>
<h3>DATE_YEAR</h3>
<p>Returns the 4 digit year set on the system.</p>
<p>const int DATE_YEAR;</p>
<h4>Example:</h4>
<pre><code>void main() {
	alert(&quot;example&quot;, &quot;the year is &quot; + DATE_YEAR);
}
</code></pre>
<h3>TIME_HOUR</h3>
<p>Returns the current hour, in 24-hour format.</p>
<p>const int TIME_HOUR;</p>
<h4>Example:</h4>
<pre><code>void main() {
	alert(&quot;Example&quot;, &quot;It is currently &quot; + TIME_HOUR + &quot;:00&quot;);
}
</code></pre>
<h3>TIME_MINUTE</h3>
<p>Returns the current minute.</p>
<p>const int TIME_MINUTE;</p>
<h4>Example:</h4>
<pre><code>void main() {
	alert(&quot;Example&quot;, &quot;It is currently &quot; + TIME_HOUR + &quot;:&quot; + TIME_MINUTE);
}
</code></pre>
<h3>TIME_SECOND</h3>
<p>Returns the current second.</p>
<p>const int TIME_SECOND;</p>
<h4>Example:</h4>
<pre><code>void main() {
	alert(&quot;Example&quot;, &quot;It is currently &quot; + TIME_HOUR + &quot;:&quot; + TIME_MINUTE + &quot;:&quot; + TIME_SECOND);
}
</code></pre>
